{"version":3,"sources":["assets/images/oreo-logo.png","assets/images/oreo.png","components/GadgetsList.js","components/Header.js","components/OreoBiscuit.js","components/Counter.js","components/Speed.js","components/Notifications.js","components/Trophies.js","components/Stats.js","helpers/crypto.js","reducer.js","Game.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GadgetsList","props","gadgets","buyGadget","listItems","map","gadget","react_default","a","createElement","className","key","type","onClick","concat","alt","numeral","cost","format","speed","count","list","Header","src","oreoLogo","OreoBiscuit","getOreo","oreoBiscuit","Counter","oreos","Speed","Notifications","_ref","messages","length","message","index","text","Trophies","state","trophies","trophy","target","data-hint","title","ticks","clicks","gadgetsCount","crypto","method","data","SimpleCrypto","reducer","action","Object","objectSpread","oreosPerSecond","newGadgets","totalCost","lastThreeMessages","max","maxMessages","shift","getMaxMessages","toConsumableArray","newMessage","oreosPerTick","newMessages","updatedMessages","time","filter","getUpdatedMessages","autoSaveTimeout","stateWithoutMessages","encryptedProgress","crepto","JSON","stringify","window","localStorage","setItem","saveProgress","reduce","accumulator","currentValue","Oreo","_useReducer","useReducer","getItem","progress","parse","getProgress","initialState","_useReducer2","slicedToArray","dispatch","automationTimerID","useRef","automate","current","setInterval","react","fallback","Stats_Trophies","requestedGadgetIndex","findIndex","requestedGadget","Math","ceil","inflation","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Game","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.032b342a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oreo-logo.6e871b98.png\";","module.exports = __webpack_public_path__ + \"static/media/oreo.6eb78e8a.png\";","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function GadgetsList(props) {\n  const { gadgets, buyGadget } = props\n  const listItems = gadgets.map(gadget => (\n    <li className=\"automation-item\" key={gadget.type}>\n      <button className=\"buy-gadget\" onClick={() => buyGadget(gadget.type)}>\n        <i className={`icon icon-${gadget.type}`} alt=\"oreo logo\" />\n        <span className=\"gadget-name\">{gadget.type}</span>\n        <span className=\"gadget-cost\">\n          {numeral(gadget.cost).format('0,0') + ' oreos'}\n        </span>\n        <div>\n          <small>{gadget.speed} oreo per second!</small>\n        </div>\n        <span className=\"gadgets-count\">{gadget.count}</span>\n      </button>\n    </li>\n  ))\n\n  const list = <ul className=\"automation-store\">{listItems}</ul>\n\n  const gadgetsStore = (\n    <div>\n      <h2 className=\"oreo-font\">Automation Gadgets!</h2>\n      {list}\n    </div>\n  )\n\n  return gadgetsStore\n}\n","import React from 'react'\nimport oreoLogo from '../assets/images/oreo-logo.png'\n\nexport default function Header() {\n  return (\n    <div className=\"logo oreo-font\">\n      <img src={oreoLogo} className=\"oreo-logo\" alt=\"oreo logo\" />\n      <span>Clicker!</span>\n    </div>\n  )\n}\n","import React from 'react'\nimport oreoBiscuit from '../assets/images/oreo.png'\n\nexport default function OreoBiscuit(props) {\n  const { getOreo } = props\n  return (\n    <div className=\"big-biscuit\" onClick={getOreo}>\n      <img src={oreoBiscuit} className=\"oreo-biscuit\" alt=\"oreo biscuit\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function Counter(props) {\n  const { oreos } = props\n  return (\n    <div className=\"oreos-counter oreo-font\">\n      {numeral(oreos).format('0,0')} oreos!\n    </div>\n  )\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function Speed(props) {\n  const { speed } = props\n  return (\n    <div className=\"oreo-speed oreo-font\">\n      per second: {numeral(speed).format('0,0.0')}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Notifications({ messages }) {\n  return (\n    messages.length > 0 && (\n      <div className=\"notifications-center\">\n        {messages.map((message, index) => {\n          return (\n            <div className=\"message\" key={index}>\n              {message.text}\n            </div>\n          )\n        })}\n      </div>\n    )\n  )\n}\n","import React from 'react'\n\nexport default function Trophies({ state }) {\n  const { trophies } = state\n  return (\n    trophies.length > 0 && (\n      <div className=\"trophies-center\">\n        <h2 className=\"oreo-font\">Trophies Center</h2>\n        <div className=\"trophies\">\n          {trophies.map((trophy, index) => {\n            if (state[trophy.key] >= trophy.target) {\n              return (\n                <div\n                  className={`trophy trophy-${trophy.type}`}\n                  key={index}\n                  data-hint={trophy.message}\n                >\n                  <span>{trophy.title}</span>\n                </div>\n              )\n            }\n\n            return false\n          })}\n        </div>\n      </div>\n    )\n  )\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function Trophies({ state }) {\n  const { ticks, clicks, gadgetsCount } = state\n  return (\n    <div className=\"stats\">\n      <div>time played: {numeral(ticks).format('00:00:00')}</div>\n      <div>clicks: {numeral(clicks).format('0,0')}</div>\n      <div>total gadgets: {numeral(gadgetsCount).format('0,0')}</div>\n    </div>\n  )\n}\n","import SimpleCrypto from 'simple-crypto-js'\n\nexport default function crypto(method, data) {\n  const _secretKey = 'hello-voi'\n  const simpleCrypto = new SimpleCrypto(_secretKey)\n\n  return simpleCrypto[method](data)\n}\n","import crepto from './helpers/crypto'\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'GET_OREO':\n      return {\n        ...state,\n        oreos: state.oreos + 1,\n        clicks: state.clicks + 1,\n      }\n\n    case 'BUY_GADGET':\n      const speed = oreosPerSecond(action.newGadgets)\n      return {\n        ...state,\n        oreos: state.oreos - action.totalCost,\n        gadgetsCount: state.gadgetsCount + 1,\n        gadgets: action.newGadgets,\n        speed,\n      }\n\n    case 'PUSH_MESSAGE':\n      const lastThreeMessages = getMaxMessages(state.messages, 3)\n      return {\n        ...state,\n        messages: [...lastThreeMessages, action.newMessage],\n      }\n\n    case 'TICK':\n      const oreosPerTick = oreosPerSecond(state.gadgets)\n      const newMessages = getUpdatedMessages(state.messages)\n      return {\n        ...state,\n        ticks: state.ticks + 1,\n        oreos: state.oreos + oreosPerTick,\n        messages: newMessages,\n      }\n\n    case 'SAVE_PROGRESS':\n      if (state.ticks % state.autoSaveTimeout === 0) {\n        saveProgress(state)\n      }\n      return state\n\n    default:\n      return state\n  }\n\n  function getMaxMessages(messages, max) {\n    let maxMessages = messages\n    if (maxMessages.length >= max) {\n      maxMessages.shift()\n    }\n\n    return maxMessages\n  }\n\n  function getUpdatedMessages(messages) {\n    let updatedMessages = messages\n    if (updatedMessages.length > 0) {\n      updatedMessages = updatedMessages\n        .map(message => {\n          return { ...message, time: message.time - 1 }\n        })\n        .filter(message => {\n          return message.time >= 0 && message\n        })\n    }\n\n    return updatedMessages\n  }\n\n  function oreosPerSecond(gadgets) {\n    const speedReducer = (accumulator, currentValue) => {\n      accumulator += currentValue.speed * currentValue.count\n      return accumulator\n    }\n    const speed = gadgets.reduce(speedReducer, 0)\n    return speed\n  }\n\n  function saveProgress(state) {\n    const newMessage = {\n      type: 'info',\n      text: `Click on the big OREO biscuit to resume :)`,\n      time: 0,\n    }\n    const stateWithoutMessages = { ...state, messages: [newMessage] }\n    const progrees = JSON.stringify(stateWithoutMessages)\n    const encryptedProgress = crepto('encrypt', progrees)\n\n    window.localStorage.setItem('progrees', encryptedProgress)\n  }\n}\n\nexport default reducer\n","import React, { Suspense, useReducer, useRef, useEffect } from 'react'\nimport GadgetsList from './components/GadgetsList'\nimport Header from './components/Header'\nimport OreoBiscuit from './components/OreoBiscuit'\nimport Counter from './components/Counter'\nimport Speed from './components/Speed'\nimport Notifications from './components/Notifications'\nimport Trophies from './components/Trophies'\nimport Stats from './components/Stats'\nimport crepto from './helpers/crypto'\nimport numeral from 'numeral'\nimport initialState from './initialState.json'\nimport reducer from './reducer'\nimport './assets/style/game.css'\n\nfunction getProgress() {\n  if (window.localStorage.getItem('progrees')) {\n    const encryptedProgress = window.localStorage.getItem('progrees')\n    const progress = crepto('decrypt', encryptedProgress)\n\n    return JSON.parse(progress)\n  }\n\n  return null\n}\n\nfunction Oreo() {\n  const [state, dispatch] = useReducer(reducer, getProgress() || initialState)\n  const { oreos, speed, gadgets, messages } = state\n\n  const automationTimerID = useRef(null)\n\n  // useEffect(() => {\n  //   automate()\n  // }, [])\n\n  function getOreo() {\n    if (!automationTimerID.current) automate()\n    dispatch({ type: 'GET_OREO' })\n  }\n\n  function buyGadget(type) {\n    if (!automationTimerID.current) automate()\n\n    const requestedGadgetIndex = gadgets.findIndex(\n      gadget => gadget.type === type\n    )\n\n    const requestedGadget = gadgets[requestedGadgetIndex]\n\n    let newGadgets = gadgets\n    let totalCost = requestedGadget.cost\n\n    if (oreos >= totalCost) {\n      newGadgets[requestedGadgetIndex].count = requestedGadget.count + 1\n      newGadgets[requestedGadgetIndex].cost = Math.ceil(\n        totalCost * requestedGadget.inflation\n      )\n\n      dispatch({ type: 'BUY_GADGET', totalCost, newGadgets })\n    } else {\n      const newMessage = {\n        type: 'info',\n        text: `Not enough oreos yet! you need\n        ${numeral(Math.ceil(totalCost - oreos)).format('0,0')} more!`,\n        time: 5,\n      }\n\n      dispatch({ type: 'PUSH_MESSAGE', newMessage })\n    }\n  }\n\n  function automate() {\n    automationTimerID.current = setInterval(() => tick(), 1000)\n  }\n\n  function tick() {\n    dispatch({ type: 'TICK' })\n    dispatch({ type: 'SAVE_PROGRESS' })\n  }\n\n  return (\n    <div className=\"oreo-clicker\">\n      <div className=\"oreo-bg\">\n        <Suspense fallback={<div>Loading Game :)</div>}>\n          <div className=\"biscuit-side\">\n            <div>\n              <Header />\n              <OreoBiscuit getOreo={getOreo} />\n              <Counter oreos={oreos} />\n              <Speed speed={speed} />\n            </div>\n          </div>\n          <Notifications messages={messages} />\n          <div className=\"gadgets-side\">\n            <Stats state={state} />\n            <GadgetsList buyGadget={buyGadget} gadgets={gadgets} />\n            <Trophies state={state} />\n          </div>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n\nexport default Oreo\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/style/game.css'\nimport Oreo from './Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Oreo />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}