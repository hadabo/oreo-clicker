{"version":3,"sources":["assets/images/oreo-logo.png","assets/images/oreo.png","components/GadgetsList.js","components/Header.js","components/OreoBiscuit.js","components/Counter.js","components/Speed.js","components/Notifications.js","components/Trophies.js","components/Stats.js","helpers/crypto.js","reducer.js","Game.js","serviceWorker.js","index.js"],"names":["module","exports","GadgetsList","props","gadgets","buyGadget","listItems","map","gadget","className","key","type","onClick","alt","numeral","cost","format","speed","count","list","Header","src","oreoLogo","OreoBiscuit","getOreo","oreoBiscuit","Counter","oreos","Speed","Notifications","messages","length","message","index","text","Trophies","state","trophies","trophy","target","data-hint","title","ticks","clicks","gadgetsCount","crypto","method","data","SimpleCrypto","reducer","action","oreosPerSecond","newGadgets","totalCost","lastThreeMessages","max","maxMessages","shift","getMaxMessages","newMessage","oreosPerTick","newMessages","updatedMessages","time","filter","getUpdatedMessages","autoSaveTimeout","stateWithoutMessages","encryptedProgress","crepto","JSON","stringify","window","localStorage","setItem","saveProgress","reduce","accumulator","currentValue","Oreo","useReducer","getItem","progress","initialState","error","console","getProgress","dispatch","automationTimerID","useRef","automate","current","setInterval","fallback","requestedGadgetIndex","findIndex","requestedGadget","Math","ceil","inflation","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.718e6688.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oreo-logo.6e871b98.png\";","module.exports = __webpack_public_path__ + \"static/media/oreo.6eb78e8a.png\";","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function GadgetsList(props) {\n  const { gadgets, buyGadget } = props\n  const listItems = gadgets.map(gadget => (\n    <li className=\"automation-item\" key={gadget.type}>\n      <button className=\"buy-gadget\" onClick={() => buyGadget(gadget.type)}>\n        <i className={`icon icon-${gadget.type}`} alt=\"oreo logo\" />\n        <span className=\"gadget-name\">{gadget.type}</span>\n        <span className=\"gadget-cost\">\n          {numeral(gadget.cost).format('0,0') + ' oreos'}\n        </span>\n        <div>\n          <small>{gadget.speed} oreo per second!</small>\n        </div>\n        <span className=\"gadgets-count\">{gadget.count}</span>\n      </button>\n    </li>\n  ))\n\n  const list = <ul className=\"automation-store\">{listItems}</ul>\n\n  const gadgetsStore = (\n    <div>\n      <h2 className=\"oreo-font\">Automation Gadgets!</h2>\n      {list}\n    </div>\n  )\n\n  return gadgetsStore\n}\n","import React from 'react'\nimport oreoLogo from '../assets/images/oreo-logo.png'\n\nexport default function Header() {\n  return (\n    <div className=\"logo oreo-font\">\n      <img src={oreoLogo} className=\"oreo-logo\" alt=\"oreo logo\" />\n      <span>Clicker!</span>\n    </div>\n  )\n}\n","import React from 'react'\nimport oreoBiscuit from '../assets/images/oreo.png'\n\nexport default function OreoBiscuit(props) {\n  const { getOreo } = props\n  return (\n    <div className=\"big-biscuit\" onClick={getOreo}>\n      <img src={oreoBiscuit} className=\"oreo-biscuit\" alt=\"oreo biscuit\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function Counter(props) {\n  const { oreos } = props\n  return (\n    <div className=\"oreos-counter oreo-font\">\n      {numeral(oreos).format('0,0')} oreos!\n    </div>\n  )\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function Speed(props) {\n  const { speed } = props\n  return (\n    <div className=\"oreo-speed oreo-font\">\n      per second: {numeral(speed).format('0,0.0')}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Notifications({ messages }) {\n  return (\n    messages.length > 0 && (\n      <div className=\"notifications-center\">\n        {messages.map((message, index) => {\n          return (\n            <div className=\"message\" key={index}>\n              {message.text}\n            </div>\n          )\n        })}\n      </div>\n    )\n  )\n}\n","import React from 'react'\n\nexport default function Trophies({ state }) {\n  const { trophies } = state\n  return (\n    trophies.length > 0 && (\n      <div className=\"trophies-center\">\n        <h2 className=\"oreo-font\">Trophies Center</h2>\n        <div className=\"trophies\">\n          {trophies.map((trophy, index) => {\n            if (state[trophy.key] >= trophy.target) {\n              return (\n                <div\n                  className={`trophy trophy-${trophy.type}`}\n                  key={index}\n                  data-hint={trophy.message}\n                >\n                  <span>{trophy.title}</span>\n                </div>\n              )\n            }\n\n            return false\n          })}\n        </div>\n      </div>\n    )\n  )\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport default function Trophies({ state }) {\n  const { ticks, clicks, gadgetsCount } = state\n  return (\n    <div className=\"stats\">\n      <div>time played: {numeral(ticks).format('00:00:00')}</div>\n      <div>clicks: {numeral(clicks).format('0,0')}</div>\n      <div>total gadgets: {numeral(gadgetsCount).format('0,0')}</div>\n    </div>\n  )\n}\n","import SimpleCrypto from 'simple-crypto-js'\n\nexport default function crypto(method, data) {\n  const _secretKey = 'hello-voi'\n  const simpleCrypto = new SimpleCrypto(_secretKey)\n\n  return simpleCrypto[method](data)\n}\n","import crepto from './helpers/crypto'\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'GET_OREO':\n      return {\n        ...state,\n        oreos: state.oreos + 1,\n        clicks: state.clicks + 1,\n      }\n\n    case 'BUY_GADGET':\n      const speed = oreosPerSecond(action.newGadgets)\n      return {\n        ...state,\n        oreos: state.oreos - action.totalCost,\n        gadgetsCount: state.gadgetsCount + 1,\n        gadgets: action.newGadgets,\n        speed,\n      }\n\n    case 'PUSH_MESSAGE':\n      const lastThreeMessages = getMaxMessages(state.messages, 3)\n      return {\n        ...state,\n        messages: [...lastThreeMessages, action.newMessage],\n      }\n\n    case 'TICK':\n      const oreosPerTick = oreosPerSecond(state.gadgets)\n      const newMessages = getUpdatedMessages(state.messages)\n      return {\n        ...state,\n        ticks: state.ticks + 1,\n        oreos: state.oreos + oreosPerTick,\n        messages: newMessages,\n      }\n\n    case 'SAVE_PROGRESS':\n      if (state.ticks % state.autoSaveTimeout === 0) {\n        saveProgress(state)\n      }\n      return state\n\n    default:\n      return state\n  }\n\n  function getMaxMessages(messages, max) {\n    let maxMessages = messages\n    if (maxMessages.length >= max) {\n      maxMessages.shift()\n    }\n\n    return maxMessages\n  }\n\n  function getUpdatedMessages(messages) {\n    let updatedMessages = messages\n    if (updatedMessages.length > 0) {\n      updatedMessages = updatedMessages\n        .map(message => {\n          return { ...message, time: message.time - 1 }\n        })\n        .filter(message => {\n          return message.time >= 0 && message\n        })\n    }\n\n    return updatedMessages\n  }\n\n  function oreosPerSecond(gadgets) {\n    const speedReducer = (accumulator, currentValue) => {\n      accumulator += currentValue.speed * currentValue.count\n      return accumulator\n    }\n    const speed = gadgets.reduce(speedReducer, 0)\n    return speed\n  }\n\n  function saveProgress(state) {\n    const newMessage = {\n      type: 'info',\n      text: `Click on the big OREO biscuit to resume :)`,\n      time: 0,\n    }\n    const stateWithoutMessages = { ...state, messages: [newMessage] }\n    const progrees = JSON.stringify(stateWithoutMessages)\n    const encryptedProgress = crepto('encrypt', progrees)\n\n    window.localStorage.setItem('progrees', encryptedProgress)\n  }\n}\n\nexport default reducer\n","import React, { Suspense, useReducer, useRef } from 'react'\nimport GadgetsList from './components/GadgetsList'\nimport Header from './components/Header'\nimport OreoBiscuit from './components/OreoBiscuit'\nimport Counter from './components/Counter'\nimport Speed from './components/Speed'\nimport Notifications from './components/Notifications'\nimport Trophies from './components/Trophies'\nimport Stats from './components/Stats'\nimport crepto from './helpers/crypto'\nimport numeral from 'numeral'\nimport initialState from './initialState.json'\nimport reducer from './reducer'\nimport './assets/style/game.css'\n\nfunction getProgress() {\n  if (window.localStorage.getItem('progrees')) {\n    const encryptedProgress = window.localStorage.getItem('progrees')\n    let progress = initialState\n\n    try {\n      progress = crepto('decrypt', encryptedProgress)\n    } catch (error) {\n      console.error(error)\n    }\n\n    return progress\n  }\n\n  return null\n}\n\nfunction Oreo() {\n  const [state, dispatch] = useReducer(reducer, getProgress() || initialState)\n  const { oreos, speed, gadgets, messages } = state\n\n  const automationTimerID = useRef(null)\n\n  // useEffect(() => {\n  //   automate()\n  // }, [])\n\n  function getOreo() {\n    if (!automationTimerID.current) automate()\n    dispatch({ type: 'GET_OREO' })\n  }\n\n  function buyGadget(type) {\n    if (!automationTimerID.current) automate()\n\n    const requestedGadgetIndex = gadgets.findIndex(\n      (gadget) => gadget.type === type\n    )\n\n    const requestedGadget = gadgets[requestedGadgetIndex]\n\n    let newGadgets = gadgets\n    let totalCost = requestedGadget.cost\n\n    if (oreos >= totalCost) {\n      newGadgets[requestedGadgetIndex].count = requestedGadget.count + 1\n      newGadgets[requestedGadgetIndex].cost = Math.ceil(\n        totalCost * requestedGadget.inflation\n      )\n\n      dispatch({ type: 'BUY_GADGET', totalCost, newGadgets })\n    } else {\n      const newMessage = {\n        type: 'info',\n        text: `Not enough oreos yet! you need\n        ${numeral(Math.ceil(totalCost - oreos)).format('0,0')} more!`,\n        time: 5,\n      }\n\n      dispatch({ type: 'PUSH_MESSAGE', newMessage })\n    }\n  }\n\n  function automate() {\n    automationTimerID.current = setInterval(() => tick(), 1000)\n  }\n\n  function tick() {\n    dispatch({ type: 'TICK' })\n    dispatch({ type: 'SAVE_PROGRESS' })\n  }\n\n  return (\n    <div className=\"oreo-clicker\">\n      <div className=\"oreo-bg\">\n        <Suspense fallback={<div>Loading Game :)</div>}>\n          <div className=\"biscuit-side\">\n            <div>\n              <Header />\n              <OreoBiscuit getOreo={getOreo} />\n              <Counter oreos={oreos} />\n              <Speed speed={speed} />\n            </div>\n          </div>\n          <Notifications messages={messages} />\n          <div className=\"gadgets-side\">\n            <Stats state={state} />\n            <GadgetsList buyGadget={buyGadget} gadgets={gadgets} />\n            <Trophies state={state} />\n          </div>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n\nexport default Oreo\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/style/game.css'\nimport Oreo from './Game'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Oreo />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}